{"version":3,"sources":["components/UI/RepoCard/RepoCard.module.scss","components/GridRepos/GridRepos.module.scss","containers/Hero/Hero.js","components/UI/RepoCard/RepoCard.js","components/GridRepos/GridRepos.js","components/UI/Input/Input.js","components/UI/Button/Button.js","containers/RepoFinder/RepoFinder.js","containers/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RepoCard","GridContainer","Hero","props","react_default","a","createElement","className","styles","src","img","alt","name","stars","updated_at","GridRepos","grid","Object","toConsumableArray","repos","map","el","href","url","target","UI_RepoCard_RepoCard","repoCard","key","id","GridRepo","input","inputElement","elementType","InputElement","value","onChange","changed","disabled","defaultValue","elementConfig","options","displayValue","type","Input","Label","label","Button","invalid","onClick","clicked","button","RepoFinder","_useState","useState","_useState2","slicedToArray","setUrl","_useState3","language","monthCreatedFrom","yearCreatedFrom","monthCreatedTo","yearCreatedTo","starsFrom","startsTo","_useState4","inputs","setInputs","_useState5","_useState6","setRepos","useEffect","axios","get","then","res","reposArr","data","items","date","split","full_name","stargazers_count","owner","avatar_url","html_url","console","log","catch","err","formElementsArr","push","config","form","onSubmit","event","preventDefault","concat","created","URL","updatedInputs","objectSpread","updatedInputElement","onChangeHandler","UI_Button_Button","components_GridRepos_GridRepos","Footer","App","containers_Hero_Hero","containers_RepoFinder_RepoFinder","containers_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cc6b8dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RepoCard\":\"RepoCard_RepoCard__3GSnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GridContainer\":\"GridRepos_GridContainer__TQ3_l\"};","import React from 'react'\n\nimport styles from './Hero.module.scss'\n\nconst Hero = props => {\n  return (\n    <div className={styles.Hero}>\n      <h1>Good First Issue Finder</h1>\n    </div>\n  )\n}\n\nexport default Hero\n","import React from 'react'\n\n// Style imports\nimport styles from './RepoCard.module.scss'\n\nconst RepoCard = props => (\n  <div className={styles.RepoCard}>\n    <img src={props.img} alt=\"repo-avatar\" />\n    <h3>{props.name}</h3>\n    <p>{props.stars} &#9733;</p>\n    <p>Last update: {props.updated_at}</p>\n  </div>\n)\n\nexport default RepoCard\n","import React from 'react'\n\n// Style imports\nimport styles from './GridRepos.module.scss'\n\n// UI imports\nimport RepoCard from './../UI/RepoCard/RepoCard'\n\nconst GridRepos = props => {\n  const gridArr = [...props.repos]\n  let grid = gridArr.map(el => (\n    <a href={el.url} target=\"_blank\">\n      <RepoCard\n        className={styles.repoCard}\n        key={el.id}\n        name={el.name}\n        updated_at={el.updated_at}\n        stars={el.stars}\n        img={el.img}\n      />\n    </a>\n  ))\n\n  return (\n    <div className={styles.GridRepo}>\n      <div className={styles.GridContainer}>{grid}</div>\n    </div>\n  )\n}\n\nexport default GridRepos\n","import React from 'react'\n\nimport styles from './Input.module.scss'\n\nconst input = props => {\n  let inputElement = null\n  switch (props.elementType) {\n    case 'select':\n      inputElement = (\n        <select\n          className={styles.InputElement}\n          value={props.value}\n          onChange={props.changed}\n        >\n          <option disabled defaultValue value=\"\">\n            {' '}\n            -- select an option --{' '}\n          </option>\n          {props.elementConfig.options.map(el => (\n            <option value={el.value} key={el.value}>\n              {el.displayValue}\n            </option>\n          ))}\n        </select>\n      )\n      break\n    case 'date':\n    case 'number':\n      inputElement = (\n        <input\n          type=\"number\"\n          className={styles.InputElement}\n          value={props.value}\n          onChange={props.changed}\n        />\n      )\n      break\n    default:\n      inputElement = <input type=\"input\" />\n  }\n\n  return (\n    <div className={styles.Input}>\n      <label className={styles.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  )\n}\n\nexport default input\n","import React from 'react'\n\nimport styles from './Button.module.scss'\n\nconst Button = props => {\n  return (\n    <button\n      disabled={props.invalid}\n      onClick={props.clicked}\n      className={styles.button}\n    >\n      {props.label}\n    </button>\n  )\n}\n\nexport default Button\n","import React, { useState, useEffect } from 'react'\n\n// Style imports\nimport styles from './RepoFinder.module.scss'\n\n// Package imports\nimport axios from 'axios'\n\n// Container imports\nimport GridRepos from './../../components/GridRepos/GridRepos'\n\n// UI imports\nimport Input from './../../components/UI/Input/Input'\nimport Button from './../../components/UI/Button/Button'\n\nconst RepoFinder = props => {\n  const [url, setUrl] = useState('')\n  const [inputs, setInputs] = useState({\n    language: {\n      label: 'What programming language you want to get issues of ',\n      elementType: 'select',\n      value: '',\n      elementConfig: {\n        options: [\n          { value: 'javascript', displayValue: 'Javascript' },\n          { value: 'java', displayValue: 'Java' },\n          { value: 'python', displayValue: 'Python' },\n        ],\n      },\n    },\n    monthCreatedFrom: {\n      label: 'From what month',\n      elementType: 'select',\n      value: '',\n      elementConfig: {\n        options: [\n          { value: '01', displayValue: 'January' },\n          { value: '02', displayValue: 'February' },\n          { value: '03', displayValue: 'March' },\n          { value: '04', displayValue: 'April' },\n          { value: '05', displayValue: 'May' },\n          { value: '06', displayValue: 'June' },\n          { value: '07', displayValue: 'July' },\n          { value: '08', displayValue: 'August' },\n          { value: '09', displayValue: 'September' },\n          { value: '10', displayValue: 'October' },\n          { value: '11', displayValue: 'November' },\n          { value: '12', displayValue: 'December' },\n        ],\n      },\n    },\n    yearCreatedFrom: {\n      label: 'Of which year',\n      elementType: 'select',\n      value: '',\n      elementConfig: {\n        options: [\n          { value: '2007', displayValue: '2007' },\n          { value: '2008', displayValue: '2008' },\n          { value: '2009', displayValue: '2009' },\n          { value: '2010', displayValue: '2010' },\n          { value: '2011', displayValue: '2011' },\n          { value: '2012', displayValue: '2012' },\n          { value: '2013', displayValue: '2013' },\n          { value: '2014', displayValue: '2014' },\n          { value: '2015', displayValue: '2015' },\n          { value: '2016', displayValue: '2016' },\n          { value: '2017', displayValue: '2017' },\n          { value: '2018', displayValue: '2018' },\n          { value: '2019', displayValue: '2019' },\n        ],\n      },\n    },\n    monthCreatedTo: {\n      label: 'To what month',\n      elementType: 'select',\n      value: '',\n      elementConfig: {\n        options: [\n          { value: '01', displayValue: 'January' },\n          { value: '02', displayValue: 'February' },\n          { value: '03', displayValue: 'March' },\n          { value: '04', displayValue: 'April' },\n          { value: '05', displayValue: 'May' },\n          { value: '06', displayValue: 'June' },\n          { value: '07', displayValue: 'July' },\n          { value: '08', displayValue: 'August' },\n          { value: '09', displayValue: 'September' },\n          { value: '10', displayValue: 'October' },\n          { value: '11', displayValue: 'November' },\n          { value: '12', displayValue: 'December' },\n        ],\n      },\n    },\n    yearCreatedTo: {\n      label: 'Of which year',\n      elementType: 'select',\n      value: '',\n      elementConfig: {\n        options: [\n          { value: '2007', displayValue: '2007' },\n          { value: '2008', displayValue: '2008' },\n          { value: '2009', displayValue: '2009' },\n          { value: '2010', displayValue: '2010' },\n          { value: '2011', displayValue: '2011' },\n          { value: '2012', displayValue: '2012' },\n          { value: '2013', displayValue: '2013' },\n          { value: '2014', displayValue: '2014' },\n          { value: '2015', displayValue: '2015' },\n          { value: '2016', displayValue: '2016' },\n          { value: '2017', displayValue: '2017' },\n          { value: '2018', displayValue: '2018' },\n          { value: '2019', displayValue: '2019' },\n        ],\n      },\n    },\n    starsFrom: {\n      label: 'Min # of stars',\n      elementType: 'number',\n      value: '',\n      elementConfig: {\n        options: [],\n      },\n    },\n    startsTo: {\n      label: 'Max # of stars',\n      elementType: 'number',\n      value: '',\n      elementConfig: {\n        options: [],\n      },\n    },\n  })\n  const [repos, setRepos] = useState('')\n  useEffect(() => {\n    axios\n      .get(url)\n      .then(res => {\n        const reposArr = res.data.items.map(el => {\n          const date = el.updated_at.split('T')\n          return {\n            id: el.id,\n            name: el.full_name,\n            updated_at: date[0],\n            stars: el.stargazers_count,\n            img: el.owner.avatar_url,\n            url: el.html_url,\n          }\n        })\n        console.log(reposArr)\n        setRepos(reposArr)\n      })\n      .catch(err => console.log(err))\n  }, [url])\n  const onChangeHandler = (event, id) => {\n    // Copy 1st level\n    const updatedInputs = {\n      ...inputs,\n    }\n    // Copy 2nd level\n    const updatedInputElement = {\n      ...updatedInputs[id],\n    }\n    // Update the copy of 2nd level\n    updatedInputElement.value = event.target.value\n    // Update the copy of 1st level\n    updatedInputs[id] = updatedInputElement\n    // Update state with the indirectly with the copied state\n    setInputs(updatedInputs)\n  }\n\n  // Transform the state into an iterable array for render\n  const formElementsArr = []\n  for (let el in inputs) {\n    formElementsArr.push({\n      id: el,\n      config: inputs[el],\n    })\n  }\n\n  const formHandler = event => {\n    event.preventDefault()\n    console.log(formElementsArr)\n\n    // Start building the query string for api search\n    // base url\n    const baseUrl =\n      'https://api.github.com/search/repositories?q=good-first-issues:>0'\n    const language = `topic:${formElementsArr[0].config.value}`\n    const stars = `stars:${formElementsArr[5].config.value}..${\n      formElementsArr[6].config.value\n    }`\n    const created = `created:${formElementsArr[2].config.value}-${\n      formElementsArr[1].config.value\n    }-01..${formElementsArr[4].config.value}-${\n      formElementsArr[3].config.value\n    }-01`\n\n    const URL = `${baseUrl}+${language}+${stars}+${created}`\n    setUrl(URL)\n    console.log(URL)\n  }\n\n  let form = (\n    <form onSubmit={formHandler}>\n      {formElementsArr.map(el => (\n        <Input\n          key={el.id}\n          elementType={el.config.elementType}\n          value={el.config.value}\n          changed={event => onChangeHandler(event, el.id)}\n          elementConfig={el.config.elementConfig}\n          label={el.config.label}\n        />\n      ))}\n      <Button disabled={false} label={'Get repos'} />\n    </form>\n  )\n\n  return (\n    <div className={styles.RepoFinder}>\n      {form}\n      <GridRepos repos={repos} />\n    </div>\n  )\n}\n\nexport default RepoFinder\n","import React from 'react'\n\n// Import styles\nimport styles from './Footer.module.scss'\n\nconst Footer = props => (\n  <div className={styles.Footer}>\n    <p>\n      You can collaborate to this repo in{' '}\n      <a href=\"https://github.com/sebaLinares/good-first-issue-finder\">\n        this github repository\n      </a>\n    </p>\n  </div>\n)\n\nexport default Footer\n","import React from 'react'\nimport './App.css'\n\nimport Hero from './containers/Hero/Hero'\nimport RepoFinder from './containers/RepoFinder/RepoFinder'\nimport Footer from './containers/Footer/Footer'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Hero />\n      <RepoFinder />\n      <hr />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}